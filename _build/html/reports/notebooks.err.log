Traceback (most recent call last):
  File "C:\Users\pmarshal\Anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\pmarshal\Anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\pmarshal\Anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\pmarshal\Anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\pmarshal\Anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\pmarshal\Anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\pmarshal\Anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\pmarshal\Anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Read the shapefile into a GeoDataFrame
bc_shapefile_path = 'bc_boundary.shp'
gdf_bc = gpd.read_file(bc_shapefile_path)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mCPLE_OpenFailedError[0m                      Traceback (most recent call last)
File [1;32mfiona\_shim.pyx:83[0m, in [0;36mfiona._shim.gdal_open_vector[1;34m()[0m

File [1;32mfiona\_err.pyx:291[0m, in [0;36mfiona._err.exc_wrap_pointer[1;34m()[0m

[1;31mCPLE_OpenFailedError[0m: bc_boundary.shp: No such file or directory

During handling of the above exception, another exception occurred:

[1;31mDriverError[0m                               Traceback (most recent call last)
Input [1;32mIn [4][0m, in [0;36m<cell line: 3>[1;34m()[0m
[0;32m      1[0m [38;5;66;03m# Read the shapefile into a GeoDataFrame[39;00m
[0;32m      2[0m bc_shapefile_path [38;5;241m=[39m [38;5;124m'[39m[38;5;124mbc_boundary.shp[39m[38;5;124m'[39m
[1;32m----> 3[0m gdf_bc [38;5;241m=[39m [43mgpd[49m[38;5;241;43m.[39;49m[43mread_file[49m[43m([49m[43mbc_shapefile_path[49m[43m)[49m

File [1;32m~\Anaconda3\lib\site-packages\geopandas\io\file.py:259[0m, in [0;36m_read_file[1;34m(filename, bbox, mask, rows, engine, **kwargs)[0m
[0;32m    256[0m     path_or_bytes [38;5;241m=[39m filename
[0;32m    258[0m [38;5;28;01mif[39;00m engine [38;5;241m==[39m [38;5;124m"[39m[38;5;124mfiona[39m[38;5;124m"[39m:
[1;32m--> 259[0m     [38;5;28;01mreturn[39;00m _read_file_fiona(
[0;32m    260[0m         path_or_bytes, from_bytes, bbox[38;5;241m=[39mbbox, mask[38;5;241m=[39mmask, rows[38;5;241m=[39mrows, [38;5;241m*[39m[38;5;241m*[39mkwargs
[0;32m    261[0m     )
[0;32m    262[0m [38;5;28;01melif[39;00m engine [38;5;241m==[39m [38;5;124m"[39m[38;5;124mpyogrio[39m[38;5;124m"[39m:
[0;32m    263[0m     [38;5;28;01mreturn[39;00m _read_file_pyogrio(
[0;32m    264[0m         path_or_bytes, bbox[38;5;241m=[39mbbox, mask[38;5;241m=[39mmask, rows[38;5;241m=[39mrows, [38;5;241m*[39m[38;5;241m*[39mkwargs
[0;32m    265[0m     )

File [1;32m~\Anaconda3\lib\site-packages\geopandas\io\file.py:303[0m, in [0;36m_read_file_fiona[1;34m(path_or_bytes, from_bytes, bbox, mask, rows, where, **kwargs)[0m
[0;32m    300[0m     reader [38;5;241m=[39m fiona[38;5;241m.[39mopen
[0;32m    302[0m [38;5;28;01mwith[39;00m fiona_env():
[1;32m--> 303[0m     [38;5;28;01mwith[39;00m reader(path_or_bytes, [38;5;241m*[39m[38;5;241m*[39mkwargs) [38;5;28;01mas[39;00m features:
[0;32m    304[0m         crs [38;5;241m=[39m features[38;5;241m.[39mcrs_wkt
[0;32m    305[0m         [38;5;66;03m# attempt to get EPSG code[39;00m

File [1;32m~\Anaconda3\lib\site-packages\fiona\env.py:408[0m, in [0;36mensure_env_with_credentials.<locals>.wrapper[1;34m(*args, **kwargs)[0m
[0;32m    405[0m [38;5;129m@wraps[39m(f)
[0;32m    406[0m [38;5;28;01mdef[39;00m [38;5;21mwrapper[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m    407[0m     [38;5;28;01mif[39;00m local[38;5;241m.[39m_env:
[1;32m--> 408[0m         [38;5;28;01mreturn[39;00m f([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    409[0m     [38;5;28;01melse[39;00m:
[0;32m    410[0m         [38;5;28;01mif[39;00m [38;5;28misinstance[39m(args[[38;5;241m0[39m], [38;5;28mstr[39m):

File [1;32m~\Anaconda3\lib\site-packages\fiona\__init__.py:286[0m, in [0;36mopen[1;34m(fp, mode, driver, schema, crs, encoding, layer, vfs, enabled_drivers, crs_wkt, **kwargs)[0m
[0;32m    283[0m     path [38;5;241m=[39m parse_path(fp)
[0;32m    285[0m [38;5;28;01mif[39;00m mode [38;5;129;01min[39;00m ([38;5;124m'[39m[38;5;124ma[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mr[39m[38;5;124m'[39m):
[1;32m--> 286[0m     c [38;5;241m=[39m Collection(path, mode, driver[38;5;241m=[39mdriver, encoding[38;5;241m=[39mencoding,
[0;32m    287[0m                    layer[38;5;241m=[39mlayer, enabled_drivers[38;5;241m=[39menabled_drivers, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    288[0m [38;5;28;01melif[39;00m mode [38;5;241m==[39m [38;5;124m'[39m[38;5;124mw[39m[38;5;124m'[39m:
[0;32m    289[0m     [38;5;28;01mif[39;00m schema:
[0;32m    290[0m         [38;5;66;03m# Make an ordered dict of schema properties.[39;00m

File [1;32m~\Anaconda3\lib\site-packages\fiona\collection.py:162[0m, in [0;36mCollection.__init__[1;34m(self, path, mode, driver, schema, crs, encoding, layer, vsi, archive, enabled_drivers, crs_wkt, ignore_fields, ignore_geometry, **kwargs)[0m
[0;32m    160[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mmode [38;5;241m==[39m [38;5;124m'[39m[38;5;124mr[39m[38;5;124m'[39m:
[0;32m    161[0m     [38;5;28mself[39m[38;5;241m.[39msession [38;5;241m=[39m Session()
[1;32m--> 162[0m     [38;5;28mself[39m[38;5;241m.[39msession[38;5;241m.[39mstart([38;5;28mself[39m, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    163[0m [38;5;28;01melif[39;00m [38;5;28mself[39m[38;5;241m.[39mmode [38;5;129;01min[39;00m ([38;5;124m'[39m[38;5;124ma[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mw[39m[38;5;124m'[39m):
[0;32m    164[0m     [38;5;28mself[39m[38;5;241m.[39msession [38;5;241m=[39m WritingSession()

File [1;32mfiona\ogrext.pyx:540[0m, in [0;36mfiona.ogrext.Session.start[1;34m()[0m

File [1;32mfiona\_shim.pyx:90[0m, in [0;36mfiona._shim.gdal_open_vector[1;34m()[0m

[1;31mDriverError[0m: bc_boundary.shp: No such file or directory
DriverError: bc_boundary.shp: No such file or directory

